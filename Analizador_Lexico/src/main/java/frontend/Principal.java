/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package frontend;

import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Sammy Guergachi <sguergachi at gmail.com>
 */
public class Principal extends javax.swing.JFrame {

    /**
     * Creates new form Principal
     */
    public Principal() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        subtitle = new javax.swing.JLabel();
        selec = new javax.swing.JLabel();
        selecconar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        area = new javax.swing.JTextArea();
        importar = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Analizador Lexico");

        subtitle.setFont(new java.awt.Font("Noto Sans CJK JP", 1, 24)); // NOI18N
        subtitle.setText("                 Analizador lexico");

        selec.setFont(new java.awt.Font("Noto Sans", 1, 18)); // NOI18N
        selec.setText("Seleccione el archivo a analizar");

        selecconar.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        selecconar.setText("Seleccionar...");
        selecconar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selecconarActionPerformed(evt);
            }
        });

        area.setColumns(20);
        area.setLineWrap(true);
        area.setRows(5);
        area.setWrapStyleWord(true);
        jScrollPane1.setViewportView(area);

        importar.setFont(new java.awt.Font("Noto Sans", 1, 16)); // NOI18N
        importar.setText("Importar");
        importar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importarActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Noto Sans", 1, 15)); // NOI18N
        jButton1.setText("Analizar");

        jButton2.setFont(new java.awt.Font("Noto Sans", 3, 15)); // NOI18N
        jButton2.setText("Salir");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(subtitle, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(200, 200, 200)
                .addComponent(selec, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(selecconar)
                .addContainerGap(25, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(importar, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addComponent(jButton1)))
                        .addGap(34, 34, 34))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addGap(53, 53, 53))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(subtitle, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(selec, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(selecconar))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(importar))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addGap(28, 28, 28))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void selecconarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selecconarActionPerformed
        //Abrimos el gestor de archivos para buscar nuestro archivo
        JFileChooser archivo = new JFileChooser();
        //Solo pueden seleccionar archivos .txt
        FileNameExtensionFilter filtro = new FileNameExtensionFilter(".TXT", "txt");
        //Filtramos el archivo
        archivo.setFileFilter(filtro);
        //Guardamos la opcion seleccionada
        int seleccion = archivo.showOpenDialog(this);
        //Si el usuario le da en aceptar
        if (seleccion == JFileChooser.APPROVE_OPTION) {
            //Seleccionamos el archivo a analizar
            File aLeer = archivo.getSelectedFile();
            //Empezamos a leer el archivo
            try (FileReader leer = new FileReader(aLeer)) {
                String cadena = "";
                int val = leer.read();
                while (val != -1) {
                    cadena += (char) val;
                    val = leer.read();

                }
                this.area.setText(cadena);

            } catch (IOException e) {
                JOptionPane.showMessageDialog(rootPane, "Archivo no encontrado");

            }

        }
    }//GEN-LAST:event_selecconarActionPerformed

    private void importarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importarActionPerformed
        //Abrimos el gestor de archivos para buscar nuestro archivo
        JFileChooser archivo = new JFileChooser();
        //Solo pueden seleccionar archivos .txt
        FileNameExtensionFilter filtro = new FileNameExtensionFilter(".TXT", "txt");
        //Filtramos el archivo
        archivo.setFileFilter(filtro);
        //Guardamos la opcion seleccionada
        int seleccion = archivo.showSaveDialog(this);
        //Si el usuario le da en aceptar
        if (seleccion == JFileChooser.APPROVE_OPTION) {
            //Seleccionamos el archivo a analizar
            File aLeer = archivo.getSelectedFile();
            //Empezamos a leer el archivo
            try (FileWriter escribir = new FileWriter(aLeer)) {

                escribir.write(this.area.getText());

            } catch (IOException e) {
                JOptionPane.showMessageDialog(rootPane, "Archivo no encontrado");

            }

        }
    }//GEN-LAST:event_importarActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JTextArea area;
    private javax.swing.JButton importar;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel selec;
    private javax.swing.JButton selecconar;
    private javax.swing.JLabel subtitle;
    // End of variables declaration//GEN-END:variables
}
